name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get last PR number and title
        run: |
          LAST_PR_NUMBER=$(git log --format=%s --all --grep='Merge pull request' | head -1 | cut -d' ' -f4 | cut -d'/' -f2 | sed 's/#//g')
          LAST_PR_TITLE=$(git log --format=%s --all --grep='Merge pull request' | head -1)
          echo "LAST_PR_NUMBER=$LAST_PR_NUMBER" >> $GITHUB_ENV
          echo "LAST_PR_TITLE=$LAST_PR_TITLE" >> $GITHUB_ENV
      - name: test
        run: git log --all --format=%s
      - name: test2
        run: git status
      - name: Get commit number after last release
        run: |
          COMMIT_NUMBER_AFTER_LAST_RELEASE=$(git rev-list --count HEAD ^$(git log --format=%H --all --grep='Merge pull request' | head -1))
          echo "COMMIT_NUMBER_AFTER_LAST_RELEASE=$COMMIT_NUMBER_AFTER_LAST_RELEASE" >> $GITHUB_ENV
      - name: Set variables
        run: |
          RELEASE_TAG="0.${LAST_PR_NUMBER}.${COMMIT_NUMBER_AFTER_LAST_RELEASE}"
          RELEASE_NAME="Release ${RELEASE_TAG}"
          RELEASE_BODY="${LAST_PR_TITLE}"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
